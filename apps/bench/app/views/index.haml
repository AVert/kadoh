!!! 5
%html
  %head
    %meta{:charset => "UTF-8"}
    %script{:type => "text/javascript",
            :src  => "/dist/KadOH.js"}
    %script{:type => "text/javascript",
            :src  => "/bench.js"}

    %title KadOH Benchmarking
    :css
      body { font-family : "Helvetica Neue", Helvetica, Arial, sans-serif; }

  %body
    %p
      %input#cellular{:type  => "checkbox",
                      :value => "cellular", :name => "cellular"}
      Cellular network

    %p
      %input#start{:type  => "submit",
                   :value => "start", :name => "start"}

    %pre#monitor

    :javascript
      KadOH.log.setLevel('info');
      var monitor  = document.getElementById("monitor");
      var cellular = document.getElementById("cellular");
      var submit   = document.getElementById("start");
      var node = new KadOH.Node('b21108ffbbff076647a0ac0662acf4e4a5244b66', {
        bootstraps : [
          "bootstrap0@kadoh.fr.nf/kadoh",
          "bootstrap1@kadoh.fr.nf/kadoh",
          "bootstrap2@kadoh.fr.nf/kadoh"
        ],
        reactor : {
          transport : {
            jid      : 'kadoh@jabber.org',
            password : 'azerty',
            resource : 'kadoh'
          }
        }
      });
      KadOH.log.subscribeTo(node, 'Node', 'info');
      var bench = new KadOHBench(node, {
        hops : 4,
        idle : 2000
      });
      bench.on('data', function(results) {
        results = JSON.stringify(results, null, "\t");
        monitor.innerHTML = results;
      });
      bench.on('end', function(results) {
        // parse and sending
        var json = JSON.stringify(results);
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.open("POST", "/results", true);
        xmlhttp.setRequestHeader("Content-Type", "application/json");
        xmlhttp.send(json);
        xmlhttp.onreadystatechange = function() {
          if (xmlhttp.readyState == 4) {
            if (xmlhttp.status == 200) {
              alert("OK.");
            }
          }
        }
        node.disconnect();
      });
      submit.addEventListener("click", function() {
        monitor.innerHTML = "connecting...";
        node.connect(function() {
          monitor.innerHTML = "connected\n\nstarting the benchmark...";
          bench.start();
        });
        return false;
      });
